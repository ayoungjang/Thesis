par(fig=c(0, 1, 0, 0.2), mar=c(2,2,2,2))
#lower boundary accounting for
legend("bottomright", legend = c("Mode MICs", "mean MICs", "interval censoring", " reference MICs"),
pch = c(0, 15, 1, 16, 1), col = c("black", "black", "black", "black"),
cex = 0.7, bty = "n")
dev.off()
system(paste("open",paste0("figure_","Etest",".pdf")))
data.newdata <- within(data.newdata, {
E.log.MIC <- colMeans(mu_sample)
lower.log.MIC <- apply(mu_sample, 2, quantile, 0.025)
upper.log.MIC <- apply(mu_sample, 2, quantile, 0.975)
})
data.newdata <- merge(data.newdata, data.sub, sort = F)
data.sub$upper.log.MIC.ref <- as.factor(data.sub$upper.log.MIC.ref)
data.sub$lower.log.MIC.ref <- as.factor(data.sub$lower.log.MIC.ref)
n <- ncol(X.samplepred)
d <- 0.25
# val <- ifelse(grepl("Etest_Strain", name),lab_id,Strain_no)
# print(val)
pdf(file = paste0("figure_","Etest",".pdf"), width = 7, height = 7 * sqrt(2))
par(mar = c(8,5.5,2, 5), yaxs = "i");
plot.new();
plot.window(xlim = c(-10, 8), c(n+0.5, 0.5))
abline(h = seq(0.5, n+0.5, 1), col = 8);
abline(h = c(10.5, 20.5), lwd = 2); box();
axis(1, at = seq(-9, 7, 2), labels = signif(2^seq(-9, 7, 2), 3), cex.axis = 0.7)
axis(2, at = 1:n, labels = with(data.newdata, levels(interaction(Strain_no, sep = " "))), las = 1, cex.axis = 0.7)
title(xlab = "MIC")
with(data.newdata, {
points(mode.log.MIC, 1:n, pch = 0, cex = 0.7) #open squares - mod MICs
points(E.log.MIC, 1:n-d, pch = 15, cex = 0.7) #solid square - Predicted mean MICs and
segments(lower.log.MIC, 1:n-d, upper.log.MIC, 1:n-d)
})
with(data.sub,{
points(lower.log.MIC.ref, 1:n+d, col = 1, cex = 0.7) #open circles - lower boundary accounting for interval censoring
points(upper.log.MIC.ref, 1:n+d, col = 1, pch = 16, cex = 0.7) # solid circles - reference MICs
segments(lower.log.MIC.ref, 1:n+d, upper.log.MIC.ref, 1:n+d, col = 1)
})
ata.newdata <- merge(data.newdata, data.sub, sort = F)
data.sub$lower.log.MIC.ref <- as.numeric(as.character(data.sub$lower.log.MIC.ref))
data.sub$upper.log.MIC.ref <- as.numeric(as.character(data.sub$upper.log.MIC.ref))
n <- ncol(X.samplepred)
d <- 0.25
# val <- ifelse(grepl("Etest_Strain", name),lab_id,Strain_no)
# print(val)
pdf(file = paste0("figure_","Etest",".pdf"), width = 7, height = 7 * sqrt(2))
par(mar = c(8,5.5,2, 5), yaxs = "i");
plot.new();
plot.window(xlim = c(-10, 8), c(n+0.5, 0.5))
abline(h = seq(0.5, n+0.5, 1), col = 8);
abline(h = c(10.5, 20.5), lwd = 2); box();
axis(1, at = seq(-9, 7, 2), labels = signif(2^seq(-9, 7, 2), 3), cex.axis = 0.7)
axis(2, at = 1:n, labels = with(data.newdata, levels(interaction(Strain_no, sep = " "))), las = 1, cex.axis = 0.7)
title(xlab = "MIC")
with(data.newdata, {
points(mode.log.MIC, 1:n, pch = 0, cex = 0.7) #open squares - mod MICs
points(E.log.MIC, 1:n-d, pch = 15, cex = 0.7) #solid square - Predicted mean MICs and
segments(lower.log.MIC, 1:n-d, upper.log.MIC, 1:n-d)
})
with(data.sub,{
points(lower.log.MIC.ref, 1:n+d, col = 1, cex = 0.7) #open circles - lower boundary accounting for interval censoring
points(upper.log.MIC.ref, 1:n+d, col = 1, pch = 16, cex = 0.7) # solid circles - reference MICs
segments(lower.log.MIC.ref, 1:n+d, upper.log.MIC.ref, 1:n+d, col = 1)
})
par(xpd=TRUE)
par(new=T)
par(fig=c(0, 1, 0, 0.2), mar=c(2,2,2,2))
#lower boundary accounting for
legend("bottomright", legend = c("Mode MICs", "mean MICs", "interval censoring", " reference MICs"),
pch = c(0, 15, 1, 16, 1), col = c("black", "black", "black", "black"),
cex = 0.7, bty = "n")
dev.off()
system(paste("open",paste0("figure_","Etest",".pdf")))
# draw_plot(data,"Etest",X.samplepred)
data.newdata <- merge(data.newdata, data.sub, sort = F)
data.newdata$lower.log.MIC.ref <- as.numeric(as.character(data.newdata$lower.log.MIC.ref))
data.newdata$upper.log.MIC.ref <- as.numeric(as.character(data.newdata$upper.log.MIC.ref))
n <- ncol(X.samplepred)
d <- 0.25
# val <- ifelse(grepl("Etest_Strain", name),lab_id,Strain_no)
# print(val)
pdf(file = paste0("figure_","Etest",".pdf"), width = 7, height = 7 * sqrt(2))
par(mar = c(8,5.5,2, 5), yaxs = "i");
plot.new();
plot.window(xlim = c(-10, 8), c(n+0.5, 0.5))
abline(h = seq(0.5, n+0.5, 1), col = 8);
abline(h = c(10.5, 20.5), lwd = 2); box();
axis(1, at = seq(-9, 7, 2), labels = signif(2^seq(-9, 7, 2), 3), cex.axis = 0.7)
axis(2, at = 1:n, labels = with(data.newdata, levels(interaction(Strain_no, sep = " "))), las = 1, cex.axis = 0.7)
title(xlab = "MIC")
with(data.newdata, {
points(mode.log.MIC, 1:n, pch = 0, cex = 0.7) #open squares - mod MICs
points(E.log.MIC, 1:n-d, pch = 15, cex = 0.7) #solid square - Predicted mean MICs and
segments(lower.log.MIC, 1:n-d, upper.log.MIC, 1:n-d)
points(lower.log.MIC.ref, 1:n+d, col = 1, cex = 0.7) #open circles - lower boundary accounting for interval censoring
points(upper.log.MIC.ref, 1:n+d, col = 1, pch = 16, cex = 0.7) # solid circles - reference MICs
segments(lower.log.MIC.ref, 1:n+d, upper.log.MIC.ref, 1:n+d, col = 1)
})
par(xpd=TRUE)
par(new=T)
par(fig=c(0, 1, 0, 0.2), mar=c(2,2,2,2))
#lower boundary accounting for
legend("bottomright", legend = c("Mode MICs", "mean MICs", "interval censoring", " reference MICs"),
pch = c(0, 15, 1, 16, 1), col = c("black", "black", "black", "black"),
cex = 0.7, bty = "n")
dev.off()
system(paste("open",paste0("figure_","Etest",".pdf")))
library(survival)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
library(R2WinBUGS)
library(gmodels)
library(gdata)
library(statip)
library(openxlsx)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
Gradient_data <- na.omit(Gradient_data)
Fasit_data <- na.omit(Fasit_data)
# write.xlsx(Gradient_data,sheetName="sheet1",file="Gradient_data_without_NA.xlsx")
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test/bioMerieux", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", ifelse(MIC==">256", 512,MIC))))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
Gradient_Etest<- data.frame()
Gradient_MTS <- data.frame()
Gradient_Etest <- Gradient_data[Gradient_data$Gradient_test == "E-test/bioMerieux", ]
Gradient_MTS <- Gradient_data[Gradient_data$Gradient_test != "E-test/bioMerieux", ]
Gradient_Etest <- subset(Gradient_Etest)
data <- Gradient_Etest
data$Strain_no <- as.factor(data$Strain_no)
data$Species <- as.factor(data$Species)
data$Strain_no<-drop.levels(data$Strain_no)
head(data$Strain_no)
data$Species<-drop.levels(data$Species)
head(data$Species)
Fasit_data$Strain_no<-drop.levels(Fasit_data$Strain_no)
head(Fasit_data$Strain_no)
# working dir
wbwd <- file.path(getwd(), "WinBUGS")
# bugs model
cat("model {
for (i in 1:n) {
y[i] ~ dnorm(mu[i], tau)I(lower[i], upper[i])
mu[i] <- inprod2(X[i, ], beta[]) + b.lab[lab[i]]
}
for (j in 1:n.lab) {
b.lab[j] ~ dnorm(0.0, tau.lab)
}
for (k in 1:n.beta) {
beta[k] ~ dnorm(0.0, 1.0E-4)
}
tau <- pow(sigma, -2)
sigma ~ dunif(0.01, 100)
tau.lab <- pow(sigma.lab, -2)
sigma.lab ~ dunif(0.01, 100)
}
}", file = file.path(wbwd, "model.txt"))
# bugs data
X <- model.matrix(~ (Strain_no)^2, data = data)
n <- nrow(X);
n.beta <- ncol(X);
data$lab_id <- as.factor(data$lab_id)
n.lab <- nlevels(data$lab_id)
bugs.data <- with(data, list(n = n, lower = lower, upper = upper, X = X, n.beta = n.beta, n.lab = n.lab, lab = as.numeric(lab_id)))
# bugs inits
bugs.inits <- function()
list(y = with(data, runif(n, lower, upper)), b.lab = rnorm(n.lab, 0, 0.1), beta = rnorm(n.beta), sigma = runif(1), sigma.lab = runif(1))
# bugs fit
bugs.fit <- bugs(model.file = "model.txt", data = bugs.data, inits = bugs.inits,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"),
n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, debug = F, DIC = F, working.directory = wbwd)
read.bugsfit <- T
if (read.bugsfit) {
old.wd <- getwd()
setwd(wbwd)
bugs.fit <<- R2WinBUGS:::bugs.sims(n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"), DIC = F)
class(bugs.fit) <- "bugs"
setwd(old.wd)
}
attach.bugs(bugs.fit)
# labs compared to mean
lab.data <- data.frame(
lab = levels(data$lab_id),
diff.log.MIC = colMeans(b.lab),
lower.diff.log.MIC = apply(b.lab, 2, quantile, 0.025),
upper.diff.log.MIC = apply(b.lab, 2, quantile, 0.975))
data.newdata <- with(data, expand.grid(Strain_no = levels(Strain_no)))
data.sub <- within(data.newdata, {lower.log.MIC.ref <- NA; upper.log.MIC.ref <- NA;})
data.newdata <- within(data.newdata, {mode.log.MIC<-NA; E.log.MIC.naive <- NA; se.log.MIC.naive <- NA;})
k<-1
for (i in 1:nlevels(data$Strain_no)) {
strain_value <- levels(data$Strain_no)[i]
c_value <- subset(Fasit_data, Strain_no == strain_value) #correct answer (refmic data)
data.data.sub <- subset(data, Strain_no == strain_value)
mod <- with(data.data.sub, lm(log.MIC.naive ~ 1))
frequency_values<-mfv(data.data.sub$MIC.num)
c_value$LIN_MIC_Etest <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", c_value$LIN_MIC_Etest)))))
# Y_act <- rnorm(n=1,mean=c_value$LIN_MIC_Etest,sd=c_value$LIN_MIC_Etest*2)
# if(Y_act <0) Y_act <- Y_act*-1
# distances <- abs(frequency_values - c_value$LIN_MIC_Etest)
nearest <- frequency_values[which.min(distances)]
data.newdata[k, "mode.log.MIC"] <- log2(nearest)
# subset_rows <- data.data.sub$MIC.num == nearest
# matching_rows <- data.data.sub[subset_rows, ]
#
# lower_value <- min(matching_rows$lower)
# upper_value <- max(matching_rows$upper)
#
data.sub[k,"lower.log.MIC.ref"]<-2^(log2(c_value$LIN_MIC_Etest) - 1)
data.sub[k,"upper.log.MIC.ref"]<- 2^(log2(c_value$LIN_MIC_Etest) + 1)
data.newdata[k, c("E.log.MIC.naive", "se.log.MIC.naive")] <- c(coef(mod), sqrt(vcov(mod)))
k <- k+1
}
data.newdata <- within(data.newdata, {
lower.log.MIC.naive <- E.log.MIC.naive - 1.96 * se.log.MIC.naive
upper.log.MIC.naive <- E.log.MIC.naive + 1.96 * se.log.MIC.naive
})
X.samplepred <- model.matrix(~(Strain_no)^2, data = data.newdata)
mu_sample <- t(X.samplepred%*%t(beta))
data.newdata <- within(data.newdata, {
E.log.MIC <- colMeans(mu_sample)
lower.log.MIC <- apply(mu_sample, 2, quantile, 0.025)
upper.log.MIC <- apply(mu_sample, 2, quantile, 0.975)
})
data.newdata <- merge(data.newdata, data.sub, sort = F)
data.newdata$lower.log.MIC.ref <- as.numeric(as.character(data.newdata$lower.log.MIC.ref))
data.newdata$upper.log.MIC.ref <- as.numeric(as.character(data.newdata$upper.log.MIC.ref))
n <- ncol(X.samplepred)
d <- 0.25
# val <- ifelse(grepl("Etest_Strain", name),lab_id,Strain_no)
# print(val)
pdf(file = paste0("figure_","Etest",".pdf"), width = 7, height = 7 * sqrt(2))
par(mar = c(8,5.5,2, 5), yaxs = "i");
plot.new();
plot.window(xlim = c(-10, 8), c(n+0.5, 0.5))
abline(h = seq(0.5, n+0.5, 1), col = 8);
abline(h = c(10.5, 20.5), lwd = 2); box();
axis(1, at = seq(-9, 7, 2), labels = signif(2^seq(-9, 7, 2), 3), cex.axis = 0.7)
axis(2, at = 1:n, labels = with(data.newdata, levels(interaction(Strain_no, sep = " "))), las = 1, cex.axis = 0.7)
title(xlab = "MIC")
with(data.newdata, {
points(mode.log.MIC, 1:n, pch = 0, cex = 0.7) #open squares - mod MICs
points(E.log.MIC, 1:n-d, pch = 15, cex = 0.7) #solid square - Predicted mean MICs and
segments(lower.log.MIC, 1:n-d, upper.log.MIC, 1:n-d)
points(lower.log.MIC.ref, 1:n+d, col = 1, cex = 0.7) #open circles - lower boundary accounting for interval censoring
points(upper.log.MIC.ref, 1:n+d, col = 1, pch = 16, cex = 0.7) # solid circles - reference MICs
segments(lower.log.MIC.ref, 1:n+d, upper.log.MIC.ref, 1:n+d, col = 1)
})
par(xpd=TRUE)
par(new=T)
par(fig=c(0, 1, 0, 0.2), mar=c(2,2,2,2))
#lower boundary accounting for
legend("bottomright", legend = c("Mode MICs", "mean MICs", "interval censoring", " reference MICs"),
pch = c(0, 15, 1, 16, 1), col = c("black", "black", "black", "black"),
cex = 0.7, bty = "n")
dev.off()
system(paste("open",paste0("figure_","Etest",".pdf")))
# draw_plot(data,"Etest",X.samplepred)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
sub_data <- subset(data.newdata, Strain_no %in% c(1, 2, 3))
draw_plot(sub_data,"Etest",X.samplepred)
draw_plot(sub_data,"Etest",X.samplepred)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
draw_plot(sub_data,"Etest",X.samplepred)
sub_data <- subset(data.newdata, Strain_no %in% c(1, 2, 3))
sub_data$Strain_no<-drop.levels(sub_data$Strain_no)
head(sub_data$Strain_no)
draw_plot(sub_data,"Etest",X.samplepred)
sub_data$lower.log.MIC.ref<-as.factor(sub_data$lower.log.MIC.ref)
sub_data$upper.log.MIC.ref<-as.factor(sub_data$upper.log.MIC.ref)
sub_data$Strain_no<-drop.levels(sub_data$Strain_no)
head(sub_data$Strain_no)
draw_plot(sub_data,"Etest",X.samplepred)
sub_data <- subset(data.newdata, Strain_no %in% c(1, 2, 3))
sub_data$lower.log.MIC.ref<-as.character(sub_data$lower.log.MIC.ref)
sub_data$upper.log.MIC.ref<-as.character(sub_data$upper.log.MIC.ref)
sub_data$Strain_no<-drop.levels(sub_data$Strain_no)
head(sub_data$Strain_no)
draw_plot(sub_data,"Etest",X.samplepred)
sub_data$lower.log.MIC.ref<-as.numeric(sub_data$lower.log.MIC.ref)
sub_data$upper.log.MIC.ref<-as.numeric(sub_data$upper.log.MIC.ref)
sub_data$Strain_no<-drop.levels(sub_data$Strain_no)
head(sub_data$Strain_no)
draw_plot(sub_data,"Etest",X.samplepred)
View(data.newdata)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
n <- ncol(X.samplepred)
sub_data <- subset(data.newdata, Strain_no %in% c(1, 2, 3))
sub_data$lower.log.MIC.ref<-as.numeric(sub_data$lower.log.MIC.ref)
sub_data$upper.log.MIC.ref<-as.numeric(sub_data$upper.log.MIC.ref)
sub_data$Strain_no<-drop.levels(sub_data$Strain_no)
head(sub_data$Strain_no)
draw_plot(sub_data,"Etest",X.samplepred)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
sub_data <- subset(data.newdata, Strain_no %in% c(1, 2, 3))
sub_data$lower.log.MIC.ref<-as.numeric(sub_data$lower.log.MIC.ref)
sub_data$upper.log.MIC.ref<-as.numeric(sub_data$upper.log.MIC.ref)
sub_data$Strain_no<-drop.levels(sub_data$Strain_no)
head(sub_data$Strain_no)
draw_plot(sub_data,"Etest",X.samplepred)
library(survival)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
library(R2WinBUGS)
library(gmodels)
library(gdata)
library(statip)
library(openxlsx)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
Gradient_data <- na.omit(Gradient_data)
Fasit_data <- na.omit(Fasit_data)
# write.xlsx(Gradient_data,sheetName="sheet1",file="Gradient_data_without_NA.xlsx")
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test/bioMerieux", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", ifelse(MIC==">256", 512,MIC))))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
Gradient_Etest<- data.frame()
Gradient_MTS <- data.frame()
Gradient_Etest <- Gradient_data[Gradient_data$Gradient_test == "E-test/bioMerieux", ]
Gradient_MTS <- Gradient_data[Gradient_data$Gradient_test != "E-test/bioMerieux", ]
Gradient_Etest <- subset(Gradient_Etest)
data <- Gradient_Etest
data$Strain_no <- as.factor(data$Strain_no)
data$Species <- as.factor(data$Species)
data$Strain_no<-drop.levels(data$Strain_no)
head(data$Strain_no)
data$Species<-drop.levels(data$Species)
head(data$Species)
Fasit_data$Strain_no<-drop.levels(Fasit_data$Strain_no)
head(Fasit_data$Strain_no)
# working dir
wbwd <- file.path(getwd(), "WinBUGS")
# bugs model
cat("model {
for (i in 1:n) {
y[i] ~ dnorm(mu[i], tau)I(lower[i], upper[i])
mu[i] <- inprod2(X[i, ], beta[]) + b.lab[lab[i]]
}
for (j in 1:n.lab) {
b.lab[j] ~ dnorm(0.0, tau.lab)
}
for (k in 1:n.beta) {
beta[k] ~ dnorm(0.0, 1.0E-4)
}
tau <- pow(sigma, -2)
sigma ~ dunif(0.01, 100)
tau.lab <- pow(sigma.lab, -2)
sigma.lab ~ dunif(0.01, 100)
}
}", file = file.path(wbwd, "model.txt"))
# bugs data
X <- model.matrix(~ (Strain_no)^2, data = data)
n <- nrow(X);
n.beta <- ncol(X);
data$lab_id <- as.factor(data$lab_id)
n.lab <- nlevels(data$lab_id)
bugs.data <- with(data, list(n = n, lower = lower, upper = upper, X = X, n.beta = n.beta, n.lab = n.lab, lab = as.numeric(lab_id)))
# bugs inits
bugs.inits <- function()
list(y = with(data, runif(n, lower, upper)), b.lab = rnorm(n.lab, 0, 0.1), beta = rnorm(n.beta), sigma = runif(1), sigma.lab = runif(1))
# bugs fit
bugs.fit <- bugs(model.file = "model.txt", data = bugs.data, inits = bugs.inits,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"),
n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, debug = F, DIC = F, working.directory = wbwd)
read.bugsfit <- T
if (read.bugsfit) {
old.wd <- getwd()
setwd(wbwd)
bugs.fit <<- R2WinBUGS:::bugs.sims(n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"), DIC = F)
class(bugs.fit) <- "bugs"
setwd(old.wd)
}
attach.bugs(bugs.fit)
# labs compared to mean
lab.data <- data.frame(
lab = levels(data$lab_id),
diff.log.MIC = colMeans(b.lab),
lower.diff.log.MIC = apply(b.lab, 2, quantile, 0.025),
upper.diff.log.MIC = apply(b.lab, 2, quantile, 0.975))
data.newdata <- with(data, expand.grid(Strain_no = levels(Strain_no)))
data.sub <- within(data.newdata, {lower.log.MIC.ref <- NA; upper.log.MIC.ref <- NA;})
data.newdata <- within(data.newdata, {mode.log.MIC<-NA; E.log.MIC.naive <- NA; se.log.MIC.naive <- NA;})
k<-1
for (i in 1:nlevels(data$Strain_no)) {
strain_value <- levels(data$Strain_no)[i]
c_value <- subset(Fasit_data, Strain_no == strain_value) #correct answer (refmic data)
data.data.sub <- subset(data, Strain_no == strain_value)
mod <- with(data.data.sub, lm(log.MIC.naive ~ 1))
frequency_values<-mfv(data.data.sub$MIC.num)
c_value$LIN_MIC_Etest <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", c_value$LIN_MIC_Etest)))))
# Y_act <- rnorm(n=1,mean=c_value$LIN_MIC_Etest,sd=c_value$LIN_MIC_Etest*2)
# if(Y_act <0) Y_act <- Y_act*-1
# distances <- abs(frequency_values - c_value$LIN_MIC_Etest)
nearest <- frequency_values[which.min(distances)]
data.newdata[k, "mode.log.MIC"] <- log2(nearest)
# subset_rows <- data.data.sub$MIC.num == nearest
# matching_rows <- data.data.sub[subset_rows, ]
#
# lower_value <- min(matching_rows$lower)
# upper_value <- max(matching_rows$upper)
#
data.sub[k,"lower.log.MIC.ref"]<-2^(log2(c_value$LIN_MIC_Etest) - 1)
data.sub[k,"upper.log.MIC.ref"]<- 2^(log2(c_value$LIN_MIC_Etest) + 1)
data.newdata[k, c("E.log.MIC.naive", "se.log.MIC.naive")] <- c(coef(mod), sqrt(vcov(mod)))
k <- k+1
}
data.newdata <- within(data.newdata, {
lower.log.MIC.naive <- E.log.MIC.naive - 1.96 * se.log.MIC.naive
upper.log.MIC.naive <- E.log.MIC.naive + 1.96 * se.log.MIC.naive
})
X.samplepred <- model.matrix(~(Strain_no)^2, data = data.newdata)
mu_sample <- t(X.samplepred%*%t(beta))
data.newdata <- within(data.newdata, {
E.log.MIC <- colMeans(mu_sample)
lower.log.MIC <- apply(mu_sample, 2, quantile, 0.025)
upper.log.MIC <- apply(mu_sample, 2, quantile, 0.975)
})
data.newdata <- merge(data.newdata, data.sub, sort = F)
View(data.newdata)
data.newdata$lower.log.MIC.ref <- as.numeric(as.character(data.newdata$lower.log.MIC.ref))
data.newdata$upper.log.MIC.ref <- as.numeric(as.character(data.newdata$upper.log.MIC.ref))
View(data.newdata)
data.newdata <- merge(data.newdata, data.sub, sort = F)
View(data.newdata)
data.newdata <- merge(data.newdata, data.sub, sort = F)
View(data.newdata)
print(data.newdata$upper.log.MIC.ref)
print(data.newdata$lower.log.MIC.ref)
data.newdata$lower.log.MIC.ref<-as.integer(data.newdata$lower.log.MIC.ref)
print(data.newdata$lower.log.MIC.ref)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
data.newdata <- merge(data.newdata, data.sub, sort = F)
n <- ncol(X.samplepred)
draw_plot(data.newdata,"Etest",X.samplepred)
source("C:/Users/ayoung/Desktop/Thesis/real_data/plots.R")
data.newdata <- merge(data.newdata, data.sub, sort = F)
n <- ncol(X.samplepred)
draw_plot(data.newdata,"Etest",ncol(X.samplepred))
X.samplepred <- model.matrix(~(Strain_no)^2, data = data.newdata)
mu_sample <- t(X.samplepred%*%t(beta))
data.newdata <- within(data.newdata, {
E.log.MIC <- colMeans(mu_sample)
lower.log.MIC <- apply(mu_sample, 2, quantile, 0.025)
upper.log.MIC <- apply(mu_sample, 2, quantile, 0.975)
})
data.newdata <- merge(data.newdata, data.sub, sort = F)
n <- ncol(X.samplepred)
draw_plot(data.newdata,"Etest",ncol(X.samplepred))
