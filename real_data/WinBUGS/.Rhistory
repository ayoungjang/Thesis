library(survival)
library(R2WinBUGS)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[1, ])
Fasit_data <- Fasit_data[-1,]
names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
# Gradient_data[is.na(Gradient_data)] <- 0
Gradient_data <- na.omit(Gradient_data)
View(Gradient_data)
View(Fasit_data)
Fasit_data <- Fasit_data[-1,]
names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
View(Fasit_data)
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[1, ])
Fasit_data <- Fasit_data[-1,]
View(Fasit_data)
Fasit_data <- Fasit_data[-1,]
View(Fasit_data)
Fasit_data <- Fasit_data[-1,]
names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
View(Fasit_data)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[1, ])
Fasit_data <- Fasit_data[-1,]
names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <- within(Gradient_data, {
# as character
MIC <- ifelse(grepl("E-test", rownames(Gradient_data)), Fasit_data$`Avlesning K-res.1`, Fasit_data$`Avlesning K-res.2`)
# MIC <- as.character(`LIN_MIC Etest***`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
# as character
print(Fasit_data$`LIN_MIC Etest***`)
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
View(Fasit_data)
library(survival)
library(R2WinBUGS)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
View(Fasit_data)
names(Fasit_data) <- unname(Fasit_data[2, ])
View(Fasit_data)
Fasit_data <- Fasit_data[-1,]
View(Fasit_data)
Fasit_data <- Fasit_data[-1,]
View(Fasit_data)
names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
# Gradient_data[is.na(Gradient_data)] <- 0
Gradient_data <- na.omit(Gradient_data)
Gradient_data <- within(Gradient_data, {
print(Fasit_data$`LIN_MIC Etest***`)
# MIC <- ifelse(grepl("E-test", rownames(Gradient_data)), Fasit_data$`LIN_MIC Etest***`, Fasit_data$`LIN_MIC MTS***`)
# # MIC <- as.character(`LIN_MIC Etest***`)
# # event type: 3 = interval, 2 = left, 0 = right
# event <- rep(3, nrow(Gradient_data))
# event[union(grep("<", MIC), grep("<=", MIC))] <- 2
# event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# # as numeric
# MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# # log MIC
# log.MIC <- log2(MIC.num)
# # log MIC for naive mean
# log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# # as Surv
# log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# # lower and upper for WinBUGS
# lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
# upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test", rownames(Gradient_data)), Fasit_data$`LIN_MIC Etest***`, Fasit_data$`LIN_MIC MTS***`)
# # MIC <- as.character(`LIN_MIC Etest***`)
# # event type: 3 = interval, 2 = left, 0 = right
# event <- rep(3, nrow(Gradient_data))
# event[union(grep("<", MIC), grep("<=", MIC))] <- 2
# event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# # as numeric
# MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# # log MIC
# log.MIC <- log2(MIC.num)
# # log MIC for naive mean
# log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# # as Surv
# log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# # lower and upper for WinBUGS
# lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
# upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
colnames(Fasit_Data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
# names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
View(Fasit_data)
library(survival)
library(R2WinBUGS)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
# names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
# Gradient_data[is.na(Gradient_data)] <- 0
Gradient_data <- na.omit(Gradient_data)
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# MIC <- as.character(`LIN_MIC Etest***`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
View(Gradient_data)
View(Fasit_data)
View(Gradient_data)
library(survival)
library(R2WinBUGS)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
# names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
# Gradient_data[is.na(Gradient_data)] <- 0
Gradient_data <- na.omit(Gradient_data)
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test/bioMerieux", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# MIC <- as.character(`LIN_MIC Etest***`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
Gradient_data.sub <- subset(Gradient_data, select = c(Strain_no, Species, upper, lower, log.MIC))
# working dir
wbwd <- file.path(getwd(), "WinBUGS")
# bugs model
cat("model {
for (i in 1:n) {
y[i] ~ dnorm(mu[i], tau)I(lower[i], upper[i])
mu[i] <- inprod2(X[i, ], beta[]) + b.lab[lab[i]]
}
for (j in 1:n.lab) {
b.lab[j] ~ dnorm(0.0, tau.lab)
}
for (k in 1:n.beta) {
beta[k] ~ dnorm(0.0, 1.0E-4)
}
tau <- pow(sigma, -2)
sigma ~ dunif(0.01, 100)
tau.lab <- pow(sigma.lab, -2)
sigma.lab ~ dunif(0.01, 100)
}
}", file = file.path(wbwd, "model.txt"))
# bugs data
X <- model.matrix(~ (Strain_no+Species)^2, data = Gradient_data)
n <- nrow(X);
n.beta <- ncol(X);
n.lab <- 46
bugs.data <- with(Gradient_data, list(n = n, lower = lower, upper = upper, X = X, n.beta = n.beta, n.lab = n.lab, lab = as.numeric(lab_id)))
# bugs inits
bugs.inits <- function()
list(y = with(Gradient_data, runif(n, lower, upper)), b.lab = rnorm(n.lab, 0, 0.1), beta = rnorm(n.beta), sigma = runif(1), sigma.lab = runif(1))
# bugs fit
bugs.fit <- bugs(model.file = "model.txt", data = bugs.data, inits = bugs.inits,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"),
n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, debug = T, DIC = F, working.directory = wbwd)
library(survival)
library(R2WinBUGS)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
# names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
# Gradient_data[is.na(Gradient_data)] <- 0
Gradient_data <- na.omit(Gradient_data)
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test/bioMerieux", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# MIC <- as.character(`LIN_MIC Etest***`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
Gradient_data.sub <- subset(Gradient_data, select = c(Strain_no, Species, upper, lower, log.MIC))
# working dir
wbwd <- file.path(getwd(), "WinBUGS")
# bugs model
cat("model {
for (i in 1:n) {
y[i] ~ dnorm(mu[i], tau)I(lower[i], upper[i])
mu[i] <- inprod2(X[i, ], beta[]) + b.lab[lab[i]]
}
for (j in 1:n.lab) {
b.lab[j] ~ dnorm(0.0, tau.lab)
}
for (k in 1:n.beta) {
beta[k] ~ dnorm(0.0, 1.0E-4)
}
tau <- pow(sigma, -2)
sigma ~ dunif(0.01, 100)
tau.lab <- pow(sigma.lab, -2)
sigma.lab ~ dunif(0.01, 100)
}
}", file = file.path(wbwd, "model.txt"))
# bugs data
X <- model.matrix(~ (Strain_no+Species)^2, data = Gradient_data)
n <- nrow(X);
n.beta <- ncol(X);
n.lab <- 46
bugs.data <- with(Gradient_data, list(n = n, lower = lower, upper = upper, X = X, n.beta = n.beta, n.lab = n.lab, lab = as.numeric(lab_id)))
# bugs inits
bugs.inits <- function()
list(y = with(Gradient_data, runif(n, lower, upper)), b.lab = rnorm(n.lab, 0, 0.1), beta = rnorm(n.beta), sigma = runif(1), sigma.lab = runif(1))
# bugs fit
bugs.fit <- bugs(model.file = "model.txt", data = bugs.data, inits = bugs.inits,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"),
n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, debug = F, DIC = F, working.directory = wbwd)
print(nleves(Gradient_data$lab_id))
print(nlevels(Gradient_data$lab_id))
Gradient_data$lab_id <- as.factor(Gradient_data$lab_id)
print(nlevels(Gradient_data$lab_id))
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
# names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
Gradient_data <- na.omit(Gradient_data)
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test/bioMerieux", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# MIC <- as.character(`LIN_MIC Etest***`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
Gradient_data.sub <- subset(Gradient_data, select = c(Strain_no, Species, upper, lower, log.MIC))
# working dir
wbwd <- file.path(getwd(), "WinBUGS")
# bugs model
cat("model {
for (i in 1:n) {
y[i] ~ dnorm(mu[i], tau)I(lower[i], upper[i])
mu[i] <- inprod2(X[i, ], beta[]) + b.lab[lab[i]]
}
for (j in 1:n.lab) {
b.lab[j] ~ dnorm(0.0, tau.lab)
}
for (k in 1:n.beta) {
beta[k] ~ dnorm(0.0, 1.0E-4)
}
tau <- pow(sigma, -2)
sigma ~ dunif(0.01, 100)
tau.lab <- pow(sigma.lab, -2)
sigma.lab ~ dunif(0.01, 100)
}
}", file = file.path(wbwd, "model.txt"))
Gradient_data$lab_id <- as.factor(Gradient_data$lab_id)
print(nlevels(Gradient_data$lab_id))
# bugs data
X <- model.matrix(~ (Strain_no+Species)^2, data = Gradient_data)
n <- nrow(X);
n.beta <- ncol(X);
n.lab <- 39
bugs.data <- with(Gradient_data, list(n = n, lower = lower, upper = upper, X = X, n.beta = n.beta, n.lab = n.lab, lab = as.numeric(lab_id)))
# bugs inits
bugs.inits <- function()
list(y = with(Gradient_data, runif(n, lower, upper)), b.lab = rnorm(n.lab, 0, 0.1), beta = rnorm(n.beta), sigma = runif(1), sigma.lab = runif(1))
# bugs fit
bugs.fit <- bugs(model.file = "model.txt", data = bugs.data, inits = bugs.inits,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"),
n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, debug = F, DIC = F, working.directory = wbwd)
read.bugsfit <- T
if (read.bugsfit) {
old.wd <- getwd()
setwd(wbwd)
bugs.fit <<- R2WinBUGS:::bugs.sims(n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"), DIC = F)
class(bugs.fit) <- "bugs"
setwd(old.wd)
}
attach.bugs(bugs.fit)
library(survival)
library(R2WinBUGS)
library(survminer)
library(dplyr)
library(fitdistrplus)
library(openxlsx)
library(ggplot2)
library(reshape2)
setwd("C:/Users/ayoung/Desktop/Thesis/real_data")
getwd()
file <- "LRE_070723_Samlet.xlsx"
file2 <- "Fasit_kres_eu.xlsx"
Fasit_data<-read.xlsx(xlsxFile=file2)
Lre_data <- read.xlsx(xlsxFile=file)
names(Fasit_data) <- unname(Fasit_data[2, ])
Fasit_data <- Fasit_data[-1,]
Fasit_data <- Fasit_data[-1,]
# names(Fasit_data)[names(Fasit_data) == "NA"] <- "Strain_no"
colnames(Fasit_data) <- c("Strain_no", "LIN_mm_zone", "LIN_mm_zone_1","LIN_MIC_MTS","LIN_MIC_Etest","LIN_MIC_Etest_1")
Lre_data$Species <- as.factor(Lre_data$Species)
Lre_data$Strain_no <- as.factor(Lre_data$Strain_no)
Gradient_data <-  Lre_data[,c("lab_id", "Strain_no","Species", names(Lre_data)[grepl("Gradient", names(Lre_data))])]
Gradient_data <-  merge(Gradient_data, Fasit_data, by = "Strain_no", all.x = TRUE)
Gradient_data <- na.omit(Gradient_data)
Gradient_data <- within(Gradient_data, {
MIC <- ifelse(grepl("E-test/bioMerieux", rownames(Gradient_data)), Fasit_data$`LIN_MIC_Etest`, Fasit_data$`LIN_MIC_MTS`)
# MIC <- as.character(`LIN_MIC Etest***`)
# event type: 3 = interval, 2 = left, 0 = right
event <- rep(3, nrow(Gradient_data))
event[union(grep("<", MIC), grep("<=", MIC))] <- 2
event[union(grep(">", MIC), grep(">=", MIC))] <- 0
# as numeric
MIC.num <- as.numeric(sub("<", "", sub("<=", "" ,sub(">", "", sub(c(">="), "", MIC)))))
# log MIC
log.MIC <- log2(MIC.num)
# log MIC for naive mean
log.MIC.naive <- ifelse(event!=0, log.MIC-0.5, log.MIC+0.5)
# as Surv
log.MIC.surv <- Surv(time = ifelse(event==3, log.MIC-1, log.MIC), time2 = log.MIC, event = event, type = "interval")
# lower and upper for WinBUGS
lower <- ifelse(event==3, log.MIC-1, ifelse(event==2, -100, log.MIC))
upper <- ifelse(event==3, log.MIC, ifelse(event==2, log.MIC, 100))
})
View(Gradient_data)
Gradient_data.sub <- subset(Gradient_data, select = c(Strain_no, Species, upper, lower, log.MIC))
# working dir
wbwd <- file.path(getwd(), "WinBUGS")
# bugs model
cat("model {
for (i in 1:n) {
y[i] ~ dnorm(mu[i], tau)I(lower[i], upper[i])
mu[i] <- inprod2(X[i, ], beta[]) + b.lab[lab[i]]
}
for (j in 1:n.lab) {
b.lab[j] ~ dnorm(0.0, tau.lab)
}
for (k in 1:n.beta) {
beta[k] ~ dnorm(0.0, 1.0E-4)
}
tau <- pow(sigma, -2)
sigma ~ dunif(0.01, 100)
tau.lab <- pow(sigma.lab, -2)
sigma.lab ~ dunif(0.01, 100)
}
}", file = file.path(wbwd, "model.txt"))
# bugs data
X <- model.matrix(~ (Strain_no+Species)^2, data = Gradient_data)
n <- nrow(X);
n.beta <- ncol(X);
Gradient_data$lab_id <- as.factor(Gradient_data$lab_id)
n.lab <- nlevels(Gradient_data$lab_id)
bugs.data <- with(Gradient_data, list(n = n, lower = lower, upper = upper, X = X, n.beta = n.beta, n.lab = n.lab, lab = as.numeric(lab_id)))
# bugs inits
bugs.inits <- function()
list(y = with(Gradient_data, runif(n, lower, upper)), b.lab = rnorm(n.lab, 0, 0.1), beta = rnorm(n.beta), sigma = runif(1), sigma.lab = runif(1))
# bugs fit
bugs.fit <- bugs(model.file = "model.txt", data = bugs.data, inits = bugs.inits,
parameters.to.save = c("beta", "b.lab", "sigma", "sigma.lab"),
n.chains = 2, n.iter = 5100, n.burnin = 100, n.thin = 10, debug = F, DIC = F, working.directory = wbwd)
